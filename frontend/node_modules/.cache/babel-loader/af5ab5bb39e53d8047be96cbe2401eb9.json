{"ast":null,"code":"var _jsxFileName = \"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Gacha.js\";\nimport React, { Component } from 'react';\nimport '../styles/Gacha.css';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport gacha from '../resources/gacha_img.png';\nimport gacha_ball from '../resources/gacha_ball.png';\nimport gacha_btn from '../resources/gacha_btn.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction rewardGenerator(items) {\n  //   const items = await itemGenerator();\n  console.log(items);\n  let rewardList = [null, '10%', '100y', '200y', '500y', '1000y', '10000y']; //.concat(items);\n  // Get random index number\n\n  let valueIndex = getRandomInt(rewardList.length);\n  console.log('Got reward: ', rewardList[valueIndex]);\n  console.log('rewardGenerator ', rewardList[valueIndex], typeof rewardList[valueIndex]);\n  return rewardList[valueIndex];\n} // Rewards: [null(lost),... coupons, objects(products from rakuten)]\n// if null/objects => /reward => display\n// if coupons => generate coupons + display\n// send request to generate new coupon\n\n\nasync function addPost(value) {\n  //   event.preventDefault();\n  const body = {\n    genre: 'GEN',\n    user: JSON.parse(window.sessionStorage.getItem('data'))['id'],\n    expire_date: '2021-10-10',\n    value: value,\n    status: true\n  };\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${JSON.parse(window.sessionStorage.getItem('data'))['token']}`\n    }\n  };\n\n  try {\n    const response = await axios.post('http://127.0.0.1:8000/coupons/create/', JSON.stringify(body), config);\n    console.log('created coupon', response);\n    sessionStorage.setItem('new_coupon', JSON.stringify(response.data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nclass Gacha extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false,\n      couponActive: false,\n      items: []\n    };\n    this.AnimaHandler = this.AnimaHandler.bind(this);\n    this.CouponHandler = this.CouponHandler.bind(this);\n  }\n\n  componentDidMount() {\n    const applicationId = '1074305052326638295';\n    const apiEndpoint = `https://app.rakuten.co.jp/services/api/IchibaItem/Ranking/20170628?format=json&age=20&applicationId=${applicationId}`;\n    fetch(apiEndpoint).then(response => response.json()).then(data => this.setState({\n      items: data\n    }));\n  }\n\n  AnimaHandler() {\n    // console.log(JSON.stringify(CouponGenerator()));\n    const currentState = this.state.active;\n    this.setState({\n      active: !currentState\n    });\n  }\n\n  CouponHandler() {\n    // rewardList [null, ...7coupons, ...30products]\n    const reward = rewardGenerator(this.state.items); // if index != 0 which means got reward\n\n    if (reward != null) {\n      console.log('Type of reward: ', typeof reward, reward);\n      const currentState = this.state;\n      this.setState({\n        couponActive: !currentState.couponActive\n      }); // check if reward is a coupon or a product\n      // if it is a coupon\n\n      if (typeof reward === 'string') {\n        console.log('creating coupon');\n        addPost(reward); // Post to backend server\n      }\n    }\n\n    sessionStorage.setItem('reward', reward);\n  }\n\n  render() {\n    if (this.state.couponActive) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/Award\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"GachaContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: gacha,\n        alt: \"gacha\",\n        className: \"Gacha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gacha_btn,\n        alt: \"gacha_btn\",\n        className: this.state.active ? 'GachaBtn GachaBtn-rotate' : 'GachaBtn',\n        onClick: this.AnimaHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: gacha_ball,\n        alt: \"gacha_ball\",\n        className: this.state.active ? 'GachaBall GachaBall-anima' : 'GachaBall',\n        onClick: this.CouponHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"playBtn\",\n        onClick: this.AnimaHandler,\n        children: [' ', \"Play\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Gacha;","map":{"version":3,"sources":["/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Gacha.js"],"names":["React","Component","Redirect","axios","gacha","gacha_ball","gacha_btn","getRandomInt","max","Math","floor","random","rewardGenerator","items","console","log","rewardList","valueIndex","length","addPost","value","body","genre","user","JSON","parse","window","sessionStorage","getItem","expire_date","status","config","headers","Authorization","response","post","stringify","setItem","data","err","Gacha","constructor","props","state","active","couponActive","AnimaHandler","bind","CouponHandler","componentDidMount","applicationId","apiEndpoint","fetch","then","json","setState","currentState","reward","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/Gacha.css';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport gacha from '../resources/gacha_img.png';\nimport gacha_ball from '../resources/gacha_ball.png';\nimport gacha_btn from '../resources/gacha_btn.png';\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction rewardGenerator(items) {\n  //   const items = await itemGenerator();\n  console.log(items);\n  let rewardList = [null, '10%', '100y', '200y', '500y', '1000y', '10000y']; //.concat(items);\n\n  // Get random index number\n  let valueIndex = getRandomInt(rewardList.length);\n  console.log('Got reward: ', rewardList[valueIndex]);\n  console.log(\n    'rewardGenerator ',\n    rewardList[valueIndex],\n    typeof rewardList[valueIndex]\n  );\n  return rewardList[valueIndex];\n}\n\n// Rewards: [null(lost),... coupons, objects(products from rakuten)]\n// if null/objects => /reward => display\n// if coupons => generate coupons + display\n\n// send request to generate new coupon\nasync function addPost(value) {\n  //   event.preventDefault();\n  const body = {\n    genre: 'GEN',\n    user: JSON.parse(window.sessionStorage.getItem('data'))['id'],\n    expire_date: '2021-10-10',\n    value: value,\n    status: true,\n  };\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: `Token ${\n        JSON.parse(window.sessionStorage.getItem('data'))['token']\n      }`,\n    },\n  };\n\n  try {\n    const response = await axios.post(\n      'http://127.0.0.1:8000/coupons/create/',\n      JSON.stringify(body),\n      config\n    );\n    console.log('created coupon', response);\n    sessionStorage.setItem('new_coupon', JSON.stringify(response.data));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nclass Gacha extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      couponActive: false,\n      items: [],\n    };\n\n    this.AnimaHandler = this.AnimaHandler.bind(this);\n    this.CouponHandler = this.CouponHandler.bind(this);\n  }\n  componentDidMount() {\n    const applicationId = '1074305052326638295';\n    const apiEndpoint = `https://app.rakuten.co.jp/services/api/IchibaItem/Ranking/20170628?format=json&age=20&applicationId=${applicationId}`;\n    fetch(apiEndpoint)\n      .then((response) => response.json())\n      .then((data) => this.setState({ items: data }));\n  }\n\n  AnimaHandler() {\n    // console.log(JSON.stringify(CouponGenerator()));\n    const currentState = this.state.active;\n    this.setState({ active: !currentState });\n  }\n\n  CouponHandler() {\n    // rewardList [null, ...7coupons, ...30products]\n    const reward = rewardGenerator(this.state.items);\n\n    // if index != 0 which means got reward\n\n    if (reward != null) {\n      console.log('Type of reward: ', typeof reward, reward);\n      const currentState = this.state;\n      this.setState({ couponActive: !currentState.couponActive });\n\n      // check if reward is a coupon or a product\n      // if it is a coupon\n      if (typeof reward === 'string') {\n        console.log('creating coupon');\n        addPost(reward); // Post to backend server\n      }\n    }\n    sessionStorage.setItem('reward', reward);\n  }\n\n  render() {\n    if (this.state.couponActive) {\n      return <Redirect to=\"/Award\" />;\n    }\n    return (\n      <div className=\"GachaContainer\">\n        <img src={gacha} alt=\"gacha\" className=\"Gacha\" />\n        <img\n          src={gacha_btn}\n          alt=\"gacha_btn\"\n          className={\n            this.state.active ? 'GachaBtn GachaBtn-rotate' : 'GachaBtn'\n          }\n          onClick={this.AnimaHandler}\n        />\n        <img\n          src={gacha_ball}\n          alt=\"gacha_ball\"\n          className={\n            this.state.active ? 'GachaBall GachaBall-anima' : 'GachaBall'\n          }\n          onClick={this.CouponHandler}\n        />\n        <button className=\"playBtn\" onClick={this.AnimaHandler}>\n          {' '}\n          Play{' '}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Gacha;\n"]},"metadata":{},"sourceType":"module"}