{"ast":null,"code":"var _jsxFileName = \"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Loginpage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Loginpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserName: '',\n      Password: '',\n      isLoggin: false\n    };\n    this.Login = this.Login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Login(event) {\n    event.preventDefault();\n    console.log('Login function');\n    const configForaAuthentication = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = {\n      username: this.state.UserName,\n      password: this.state.Password\n    };\n\n    try {\n      const response = await axios.post(`http://127.0.0.1:8000/accounts/login/`, body, configForaAuthentication);\n      const token = response.data.token;\n      const configForCoupons = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Token ${token}`\n        }\n      };\n      const coupon_response = await axios.get(`http://127.0.0.1:8000/coupons/`, configForCoupons);\n      sessionStorage.setItem('coupons', JSON.stringify(coupon_response.data));\n      this.setState({\n        isLoggin: true\n      }); // sessionStorage.setItem('isLogin', true);\n\n      sessionStorage.setItem('userName', this.state.UserName);\n      sessionStorage.setItem('data', response.data);\n      console.log(sessionStorage.getItem('data'));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/gacha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Login,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.UserName,\n          name: \"UserName\",\n          placeholder: \"UserName\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.Password,\n          name: \"Password\",\n          placeholder: \"Password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Loginpage.js"],"names":["React","Component","axios","Redirect","Loginpage","constructor","props","state","UserName","Password","isLoggin","Login","bind","handleChange","event","preventDefault","console","log","configForaAuthentication","headers","body","username","password","response","post","token","data","configForCoupons","Authorization","coupon_response","get","sessionStorage","setItem","JSON","stringify","setState","getItem","err","name","value","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Loginpage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserName: '',\n      Password: '',\n      isLoggin: false,\n    };\n    this.Login = this.Login.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Login(event) {\n    event.preventDefault();\n    console.log('Login function');\n    const configForaAuthentication = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const body = {\n      username: this.state.UserName,\n      password: this.state.Password,\n    };\n    try {\n      const response = await axios.post(\n        `http://127.0.0.1:8000/accounts/login/`,\n        body,\n        configForaAuthentication\n      );\n\n      const token = response.data.token;\n      const configForCoupons = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Token ${token}`,\n        },\n      };\n\n      const coupon_response = await axios.get(\n        `http://127.0.0.1:8000/coupons/`,\n        configForCoupons\n      );\n      sessionStorage.setItem('coupons', JSON.stringify(coupon_response.data));\n\n      this.setState({ isLoggin: true });\n      // sessionStorage.setItem('isLogin', true);\n      sessionStorage.setItem('userName', this.state.UserName);\n      sessionStorage.setItem('data', response.data);\n      console.log(sessionStorage.getItem('data'));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return <Redirect to=\"/gacha\" />;\n    }\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.Login}>\n          <input\n            type=\"text\"\n            value={this.state.UserName}\n            name=\"UserName\"\n            placeholder=\"UserName\"\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <input\n            type=\"password\"\n            value={this.state.Password}\n            name=\"Password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}