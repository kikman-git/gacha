{"ast":null,"code":"var _jsxFileName = \"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.match.params.friend_uuid);\n    console.log(this.props.friend_uuid);\n    this.state = {\n      UserName: '',\n      Password: '',\n      ConfirmPassword: ''\n    };\n    this.Register = this.Register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Register(event) {\n    event.preventDefault();\n    console.log('Login function');\n\n    try {\n      const configForaAuthentication = {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      };\n\n      if (this.props.match.params.friend_uuid === undefined) {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword\n        };\n      } else {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n          friend_uuid: this.props.match.params.friend_uuid\n        };\n      }\n\n      const response = await axios.post(`http://127.0.0.1:8000/accounts/register/`, body, configForaAuthentication);\n      console.log(response);\n      const token = response.data.token;\n      const configForCoupons = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }\n      };\n      console.log(configForCoupons);\n      const coupon_response = await axios.get(`http://127.0.0.1:8000/coupons/`, configForCoupons);\n      sessionStorage.setItem('coupons', JSON.stringify(coupon_response.data)); // sessionStorage.setItem('isLogin', true);\n\n      this.setState({\n        isLoggin: true\n      });\n      sessionStorage.setItem('userName', this.state.UserName);\n      window.sessionStorage.setItem('data', JSON.stringify(response.data)); // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\n\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/gacha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Register,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.UserName,\n          name: \"UserName\",\n          placeholder: \"UserName\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.Password,\n          name: \"Password\",\n          placeholder: \"Password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.ConfirmPassword,\n          name: \"ConfirmPassword\",\n          placeholder: \"Confirm Password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js"],"names":["React","Component","axios","Redirect","RegisterPage","constructor","props","console","log","match","params","friend_uuid","state","UserName","Password","ConfirmPassword","Register","bind","handleChange","event","preventDefault","configForaAuthentication","headers","undefined","body","username","password","confirm_password","response","post","token","data","configForCoupons","coupon_response","get","sessionStorage","setItem","JSON","stringify","setState","isLoggin","window","err","name","value","target","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.match.params.friend_uuid)\n    console.log(this.props.friend_uuid)\n    this.state = {\n      UserName: '',\n      Password: '',\n      ConfirmPassword: '',\n    };\n    this.Register = this.Register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Register(event) {\n    event.preventDefault();\n    console.log('Login function');\n    try {\n      const configForaAuthentication = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      if (this.props.match.params.friend_uuid === undefined) {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n        }\n      } else {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n          friend_uuid: this.props.match.params.friend_uuid\n        }\n      }\n      const response = await axios.post(\n        `http://127.0.0.1:8000/accounts/register/`,\n        body,\n        configForaAuthentication\n      );\n      console.log(response)\n      const token = response.data.token\n      const configForCoupons = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Token ${token}`\n        }\n      }\n      console.log(configForCoupons)\n\n      const coupon_response = await axios.get(\n        `http://127.0.0.1:8000/coupons/`, configForCoupons\n      )\n      sessionStorage.setItem('coupons',JSON.stringify(coupon_response.data) )\n\n      // sessionStorage.setItem('isLogin', true);\n      this.setState({ isLoggin: true });\n      sessionStorage.setItem('userName', this.state.UserName);\n      window.sessionStorage.setItem('data', JSON.stringify(response.data));\n      // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\n\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return <Redirect to=\"/gacha\" />;\n    }\n\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.Register}>\n          <input\n            type=\"text\"\n            value={this.state.UserName}\n            name=\"UserName\"\n            placeholder=\"UserName\"\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <input\n            type=\"password\"\n            value={this.state.Password}\n            name=\"Password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <input\n            type=\"password\"\n            value={this.state.ConfirmPassword}\n            name=\"ConfirmPassword\"\n            placeholder=\"Confirm Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}