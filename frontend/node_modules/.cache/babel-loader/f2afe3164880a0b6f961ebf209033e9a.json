{"ast":null,"code":"var _jsxFileName = \"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserName: '',\n      Password: '',\n      ConfirmPassword: ''\n    };\n    this.Register = this.Register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Register(event) {\n    event.preventDefault();\n    console.log('Login function');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      console.log(this.state.Password);\n      const response = await axios.post(`http://127.0.0.1:8000/accounts/register/`, {\n        username: this.state.UserName,\n        password: this.state.Password,\n        confirm_password: this.state.ConfirmPassword\n      }, config); // sessionStorage.setItem('isLogin', true);\n\n      this.setState({\n        isLoggin: true\n      });\n      sessionStorage.setItem('userName', this.state.UserName);\n      window.sessionStorage.setItem('data', JSON.stringify(response.data)); // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\n\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/gacha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Register,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.UserName,\n          name: \"UserName\",\n          placeholder: \"UserName\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.Password,\n          name: \"Password\",\n          placeholder: \"Password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: this.state.ConfirmPassword,\n          name: \"ConfirmPassword\",\n          placeholder: \"Confirm Password\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js"],"names":["React","Component","axios","Redirect","RegisterPage","constructor","props","state","UserName","Password","ConfirmPassword","Register","bind","handleChange","event","preventDefault","console","log","config","headers","response","post","username","password","confirm_password","setState","isLoggin","sessionStorage","setItem","window","JSON","stringify","data","err","name","value","target","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,eAAe,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAClDI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEa,QAARD,QAAQ,CAACG,KAAD,EAAQ;AACpBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAI;AACFH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWE,QAAvB;AACA,YAAMW,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CACpB,0CADoB,EAErB;AACEC,QAAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWC,QADvB;AAEEe,QAAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWE,QAFvB;AAGEe,QAAAA,gBAAgB,EAAE,KAAKjB,KAAL,CAAWG;AAH/B,OAFqB,EAOrBQ,MAPqB,CAAvB,CAFE,CAYF;;AACA,WAAKO,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACAC,MAAAA,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAmC,KAAKrB,KAAL,CAAWC,QAA9C;AACAqB,MAAAA,MAAM,CAACF,cAAP,CAAsBC,OAAtB,CAA8B,MAA9B,EAAsCE,IAAI,CAACC,SAAL,CAAeX,QAAQ,CAACY,IAAxB,CAAtC,EAfE,CAgBF;;AAEAhB,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,KAnBD,CAmBE,OAAOa,GAAP,EAAY;AACZjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAZ;AACD;AACF;;AAEDpB,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAM;AAAEiB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBrB,KAAK,CAACsB,MAA9B;AACA,SAAKX,QAAL,CAAc;AACZ,OAACS,IAAD,GAAQC;AADI,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK9B,KAAL,CAAWmB,QAAf,EAAyB;AACvB,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAE,KAAKf,QAArB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,QAFpB;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ,EAAE,KAAKK;AALjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA;AAAA;AAAA;AAAA,gBARF,eAUE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,QAFpB;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,WAAW,EAAC,UAJd;AAKE,UAAA,QAAQ,EAAE,KAAKI;AALjB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAiBE;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,eAFpB;AAGE,UAAA,IAAI,EAAC,iBAHP;AAIE,UAAA,WAAW,EAAC,kBAJd;AAKE,UAAA,QAAQ,EAAE,KAAKG;AALjB;AAAA;AAAA;AAAA;AAAA,gBAlBF,eAyBE;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAzFiD","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      UserName: '',\n      Password: '',\n      ConfirmPassword: '',\n    };\n    this.Register = this.Register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Register(event) {\n    event.preventDefault();\n    console.log('Login function');\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    try {\n      console.log(this.state.Password);\n      const response = await axios.post(\n        `http://127.0.0.1:8000/accounts/register/`,\n        {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n        },\n        config\n      );\n\n      // sessionStorage.setItem('isLogin', true);\n      this.setState({ isLoggin: true });\n      sessionStorage.setItem('userName', this.state.UserName);\n      window.sessionStorage.setItem('data', JSON.stringify(response.data));\n      // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\n\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return <Redirect to=\"/gacha\" />;\n    }\n\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.Register}>\n          <input\n            type=\"text\"\n            value={this.state.UserName}\n            name=\"UserName\"\n            placeholder=\"UserName\"\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <input\n            type=\"password\"\n            value={this.state.Password}\n            name=\"Password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <input\n            type=\"password\"\n            value={this.state.ConfirmPassword}\n            name=\"ConfirmPassword\"\n            placeholder=\"Confirm Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}