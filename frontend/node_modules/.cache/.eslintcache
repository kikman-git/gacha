[{"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\index.js":"1","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\reportWebVitals.js":"2","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\App.js":"3","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Award.js":"4","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Gacha.js":"5","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\footer.js":"6","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\header.js":"7","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\ShareLink.js":"8","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Loginpage.js":"9","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Homepage.js":"10","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\RegisterPage.js":"11","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\LackofChance.js":"12","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\GetAdditionChance.js":"13","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Coupon.js":"14"},{"size":623,"mtime":1631767535612,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1631767535615,"results":"17","hashOfConfig":"16"},{"size":1227,"mtime":1631767535576,"results":"18","hashOfConfig":"16"},{"size":1007,"mtime":1631773520431,"results":"19","hashOfConfig":"16"},{"size":4804,"mtime":1631773529181,"results":"20","hashOfConfig":"16"},{"size":1901,"mtime":1631767535605,"results":"21","hashOfConfig":"16"},{"size":733,"mtime":1631767535608,"results":"22","hashOfConfig":"16"},{"size":2939,"mtime":1631767535602,"results":"23","hashOfConfig":"16"},{"size":3945,"mtime":1631767535594,"results":"24","hashOfConfig":"16"},{"size":1096,"mtime":1631767535589,"results":"25","hashOfConfig":"16"},{"size":5051,"mtime":1631767535599,"results":"26","hashOfConfig":"16"},{"size":720,"mtime":1631767535592,"results":"27","hashOfConfig":"16"},{"size":1262,"mtime":1631767535586,"results":"28","hashOfConfig":"16"},{"size":5285,"mtime":1631773961021,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n5bd68",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\index.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\reportWebVitals.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\App.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Award.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Gacha.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\footer.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\header.js",["63"],"import React from 'react';\r\nimport '../styles/Header.css';\r\nimport logo from '../resources/RakutenLogo.png';\r\n\r\n\r\n\r\n\r\nfunction Header() {\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\">\r\n        <a herf=\"#\">\r\n          <img src={logo} width=\"175\" height=\"100\" alt=\"logo\" /></a>\r\n      </div>\r\n      {/* <nav>\r\n        <ul>\r\n          <h3>Let's Gacha!</h3>\r\n        </ul>\r\n      </nav> */}\r\n    </div>\r\n    // <div className=\"header\">\r\n    //     {/* <div className=\"logo\">\r\n    //         <a href=\"https://www.rakuten.co.jp/\">\r\n    //             <img src={logo} alt = \"logo\"/>\r\n    //         </a>\r\n    //     </div> */}\r\n    //     <h3>Let's Gacha!</h3>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\ShareLink.js",["64","65"],"import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport rakutenLogo from '../resources/Rakuten-logo.png';\r\nimport '../styles/Sharelink.css';\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nexport default function ShareLink() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [copied, setCopied] = React.useState(false);\r\n  const user_uuid = JSON.parse(window.sessionStorage.getItem('data'))[\r\n    'user_uuid'\r\n  ];\r\n  console.log(user_uuid);\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)}>\r\n        Get extra gacha chance\r\n      </Button>\r\n      <Dialog\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <img src={rakutenLogo} width={100} />\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <p className=\"sharing-message\">Share with your frineds!</p>\r\n          <p>http://localhost:3000/register/{user_uuid}</p>\r\n          <CopyToClipboard\r\n            text={`http://localhost:3000/register/${user_uuid}`}\r\n            onCopy={() => setCopied(true)}\r\n          >\r\n            <Button variant=\"outlined\">Copy</Button>\r\n          </CopyToClipboard>\r\n          {copied ? <span className=\"copied-message\">Copied.</span> : null}\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\n// export default ShareLink;\r\n","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Loginpage.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Homepage.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\RegisterPage.js",["66"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Login.css';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport default class RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props.match.params.friend_uuid);\r\n    console.log(this.props.friend_uuid);\r\n    this.state = {\r\n      UserName: '',\r\n      Password: '',\r\n      ConfirmPassword: '',\r\n    };\r\n    this.Register = this.Register.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  async Register(event) {\r\n    event.preventDefault();\r\n    console.log('Login function');\r\n    try {\r\n      const configForaAuthentication = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n      if (this.props.match.params.friend_uuid === undefined) {\r\n        var body = {\r\n          username: this.state.UserName,\r\n          password: this.state.Password,\r\n          confirm_password: this.state.ConfirmPassword,\r\n        };\r\n      } else {\r\n        var body = {\r\n          username: this.state.UserName,\r\n          password: this.state.Password,\r\n          confirm_password: this.state.ConfirmPassword,\r\n          friend_uuid: this.props.match.params.friend_uuid,\r\n        };\r\n      }\r\n      const response = await axios.post(\r\n        `http://127.0.0.1:8000/accounts/register/`,\r\n        body,\r\n        configForaAuthentication\r\n      );\r\n      console.log(response);\r\n      const token = response.data.token;\r\n      const configForCoupons = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Token ${token}`,\r\n        },\r\n      };\r\n      console.log(configForCoupons);\r\n\r\n      const coupon_response = await axios.get(\r\n        `http://127.0.0.1:8000/coupons/`,\r\n        configForCoupons\r\n      );\r\n      sessionStorage.setItem('coupons', JSON.stringify(coupon_response.data));\r\n\r\n      // sessionStorage.setItem('isLogin', true);\r\n      this.setState({ isLoggin: true });\r\n      sessionStorage.setItem('userName', this.state.UserName);\r\n      window.sessionStorage.setItem('data', JSON.stringify(response.data));\r\n      // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\r\n\r\n      console.log(response);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    console.log('change');\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoggin) {\r\n      return <Redirect to=\"/gacha\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"main-section\">\r\n          <div className=\"container\">\r\n            <div className=\"box\">\r\n              <h3 className=\"spacing-small\"> Rakuten Member register </h3>\r\n              <form onSubmit={this.Register}>\r\n                <table className=\"loginBox\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"loginBoxName\">\r\n                        <label className=\"userid\"> UserID </label>\r\n                      </td>\r\n                      <td className=\"loginBoxValue\">\r\n                        <input id=\"loginInner_u\"\r\n                          type=\"text\"\r\n                          value={this.state.UserName}\r\n                          name=\"UserName\"\r\n                          placeholder=\"UserName\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                      <td className=\"loginBoxName\">\r\n                        <label className=\"passwd\">Password</label>\r\n                      </td>\r\n                      <td className=\"loginBoxValue\">\r\n                        <input id=\"loginInner_u\"\r\n                          type=\"password\"\r\n                          value={this.state.Password}\r\n                          name=\"Password\"\r\n                          placeholder=\"Password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n\r\n                    <td className=\"loginBoxName\">\r\n                        <label className=\"passwd\">Confirm Password</label>\r\n                      </td>\r\n                    <td className=\"loginBoxValue\">\r\n                    <input id=\"loginInner_u\"\r\n                      type=\"password\"\r\n                      value={this.state.ConfirmPassword}\r\n                      name=\"ConfirmPassword\"\r\n                      placeholder=\"Confirm Password\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                    </td>\r\n                    </tr>\r\n                    <br/>\r\n                  </tbody>\r\n                </table>\r\n                <button className=\"loginButton\">Submit</button>\r\n\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\LackofChance.js",[],"C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\GetAdditionChance.js",["67","68","69"],"import React, { Component } from 'react';\r\nimport '../styles/GetAdditionChance.css';\r\n\r\nexport default class GetAdditionChance extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    // this.Login = this.Login.bind(this);\r\n    // this.Register = this.Register.bind(this);\r\n    this.ShareLink = this.ShareLink.bind(this);\r\n  }\r\n\r\n  // Login() {\r\n  //   this.props.history.push('/login');\r\n  // }\r\n\r\n  // Register() {\r\n  //   this.props.history.push('/register');\r\n  // }\r\n  ShareLink() {\r\n    this.props.history.push('/share');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"getadditionchance\">\r\n        <h1>You can get additional chance by</h1>\r\n        <a \r\n        href=\"\" \r\n        className='btn btn--orange btn--radius' \r\n        >Get a chance for every 5000yen spent in rakutenichiba</a>\r\n        <br></br>\r\n        <br></br>\r\n        <a href=\"\" \r\n        className='btn btn--orange btn--radius'\r\n        >Use rakuten points to buy  chance </a>\r\n        <br></br>\r\n        <br></br>\r\n        <a href=\"\" \r\n        className='btn btn--orange btn--radius'\r\n        onClick = {this.ShareLink}\r\n        >share with one friend to get a free GACHA</a>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Tony\\Code\\Gacha\\gacha\\frontend\\src\\components\\Coupon.js",["70"],"import React, { useState, useEffect } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport '../styles/Coupon.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Button from '@material-ui/core/Button';\r\nimport CouponLogo from '../resources/paella.jpg';\r\nimport Coupon100 from '../resources/coupon100.png';\r\nimport Coupon200 from '../resources/coupon200.png';\r\nimport Coupon500 from '../resources/coupon500.png';\r\nimport Coupon1000 from '../resources/coupon1000.png';\r\nimport Coupon10000 from '../resources/coupon10000.png';\r\nimport Coupon10P from '../resources/coupon10%.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n  button:{\r\n    marginTop: '5%',\r\n  }\r\n}));\r\n\r\nexport default function Coupon() {\r\n  const classes = useStyles();\r\n  const [couponValue, setCouponValue] = React.useState('init couponValue');\r\n  const [expireData, setExpireData] = React.useState('');\r\n  const [CouponImg, setImg] = React.useState(CouponLogo);\r\n\r\n  const [isShare, setIsShare] = React.useState(false);\r\n  const [isReturn, setIsReturn] = React.useState(false);\r\n  const [isReCommend, setIsReCommend] = React.useState(false);\r\n\r\n  const [gachaChances, setGachaChances] = React.useState(1);\r\n\r\n  useEffect(() => {\r\n    const currentReward = JSON.parse(sessionStorage.getItem('reward'));\r\n    console.log('coupon.js currentReward: ', currentReward);\r\n    if (currentReward === null) {\r\n      setCouponValue(`Sorry you get nothing`);\r\n      setExpireData('Try it again');\r\n      // check if currentReward is a coupon\r\n    } else if ('value' in currentReward) {\r\n      setCouponValue(`Your Coupon is : ${currentReward.value}`);\r\n      setExpireData(currentReward.expire_date);\r\n\r\n      if(currentReward.value === \"10%\") setImg(Coupon10P);\r\n      if(currentReward.value === \"100\") setImg(Coupon100);\r\n      if(currentReward.value === \"200\") setImg(Coupon200);\r\n      if(currentReward.value === \"500\") setImg(Coupon500);\r\n      if(currentReward.value === \"1000\") setImg(Coupon1000);\r\n      if(currentReward.value === \"10000\") setImg(Coupon10000);\r\n      \r\n    } else {\r\n      setCouponValue(`You got an item: ${currentReward.Item.itemName}`);\r\n      setImg(currentReward.Item.mediumImageUrls[0].imageUrl);\r\n    }\r\n\r\n    // UPDATE GACHA CHANCES\r\n    setGachaChances(JSON.parse(sessionStorage.getItem('data')['gacha_chances'])); //TODO:\r\n  }, [couponValue]);\r\n\r\n  // share the link\r\n  function ShareHandler(){\r\n    console.log('share link');\r\n    setIsShare(true);\r\n  }\r\n\r\n  // return to the gacha page\r\n  function ReturnHandler(){\r\n    console.log('return to gacha page');\r\n    setIsReturn(true);\r\n  }\r\n  \r\n  function RecommendHandler(){\r\n    console.log('recommend page');\r\n    setIsReCommend(true);\r\n\r\n  }\r\n\r\n  // redirect to share page\r\n  if(isShare) return <Redirect to=\"/share\" />;\r\n  // redirect to gacha page\r\n  if(isReturn) return <Redirect to=\"/gacha\" />;\r\n  // redirect to recommend page\r\n  if(isReCommend) return;\r\n  return (\r\n    <div className=\"CouponContainer\">\r\n      <Card className={classes.root}>\r\n        <CardHeader\r\n          avatar={\r\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n              R\r\n            </Avatar>\r\n          }\r\n          action={\r\n            <IconButton aria-label=\"settings\">\r\n              <MoreVertIcon />\r\n            </IconButton>\r\n          }\r\n          title={couponValue}\r\n          subheader={expireData}\r\n        />\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={CouponImg}\r\n          title={'Paella dish'}\r\n        />\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            Coupon Description. {CouponImg}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions disableSpacing>\r\n          <IconButton aria-label=\"add to favorites\">\r\n            <FavoriteIcon />\r\n          </IconButton>\r\n          <IconButton aria-label=\"share\" onClick={ShareHandler}>\r\n            <ShareIcon />\r\n          </IconButton>\r\n        </CardActions>\r\n      </Card>\r\n      \r\n      <h2>You have {gachaChances} chances to play{gachaChances > 0? '!' : '. Please share!'}</h2>\r\n      <Button variant=\"contained\" className={classes.button} onClick={gachaChances > 0? ReturnHandler: ShareHandler}>\r\n        {gachaChances > 0? 'Play Again' : 'Share'}\r\n      </Button>\r\n\r\n      <Button variant=\"contained\" className={classes.button} onClick={RecommendHandler}>\r\n        Recommend\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"71","severity":1,"message":"72","line":13,"column":9,"nodeType":"73","endLine":13,"endColumn":21},{"ruleId":"74","severity":1,"message":"75","line":7,"column":8,"nodeType":"76","messageId":"77","endLine":7,"endColumn":24},{"ruleId":"78","severity":1,"message":"79","line":75,"column":11,"nodeType":"73","endLine":75,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":36,"column":13,"nodeType":"76","messageId":"82","endLine":36,"endColumn":17},{"ruleId":"71","severity":1,"message":"83","line":28,"column":9,"nodeType":"73","endLine":31,"endColumn":10},{"ruleId":"71","severity":1,"message":"83","line":34,"column":9,"nodeType":"73","endLine":36,"endColumn":10},{"ruleId":"71","severity":1,"message":"83","line":39,"column":9,"nodeType":"73","endLine":42,"endColumn":10},{"ruleId":"74","severity":1,"message":"84","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'MuiDialogActions' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-redeclare","'body' is already defined.","redeclared","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useState' is defined but never used."]