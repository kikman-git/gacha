[{"/home/kikman/JavaScript/Gacha/gacha/gacha/src/index.js":"1","/home/kikman/JavaScript/Gacha/gacha/gacha/src/reportWebVitals.js":"2","/home/kikman/JavaScript/Gacha/gacha/gacha/src/App.js":"3","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Award.js":"4","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/header.js":"5","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Gacha.js":"6","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Loginpage.js":"7","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Homepage.js":"8","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/footer.js":"9","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/GetAdditionChance.js":"10","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/LackofChance.js":"11","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Coupon.js":"12","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js":"13","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/LogoutButton.js":"14","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/ShareLink.js":"15"},{"size":602,"mtime":1631603278482,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1631603278482,"results":"18","hashOfConfig":"17"},{"size":1205,"mtime":1631752501501,"results":"19","hashOfConfig":"17"},{"size":307,"mtime":1631757843885,"results":"20","hashOfConfig":"17"},{"size":218,"mtime":1631710868228,"results":"21","hashOfConfig":"17"},{"size":4145,"mtime":1631765239881,"results":"22","hashOfConfig":"17"},{"size":2458,"mtime":1631756396215,"results":"23","hashOfConfig":"17"},{"size":757,"mtime":1631603278482,"results":"24","hashOfConfig":"17"},{"size":1856,"mtime":1631603278482,"results":"25","hashOfConfig":"17"},{"size":1214,"mtime":1631603278482,"results":"26","hashOfConfig":"17"},{"size":689,"mtime":1631603278482,"results":"27","hashOfConfig":"17"},{"size":3056,"mtime":1631765203008,"results":"28","hashOfConfig":"17"},{"size":3359,"mtime":1631752445921,"results":"29","hashOfConfig":"17"},{"size":731,"mtime":1631710868228,"results":"30","hashOfConfig":"17"},{"size":2846,"mtime":1631752428331,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1uyzykx",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/home/kikman/JavaScript/Gacha/gacha/gacha/src/index.js",[],["68","69"],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/reportWebVitals.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/App.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Award.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/header.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Gacha.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Loginpage.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Homepage.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/footer.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/GetAdditionChance.js",["70","71","72"],"import React, { Component } from 'react';\nimport '../styles/GetAdditionChance.css';\n\nexport default class GetAdditionChance extends Component {\n\n  constructor(props) {\n    super(props);\n    // this.Login = this.Login.bind(this);\n    // this.Register = this.Register.bind(this);\n    this.ShareLink = this.ShareLink.bind(this);\n  }\n\n  // Login() {\n  //   this.props.history.push('/login');\n  // }\n\n  // Register() {\n  //   this.props.history.push('/register');\n  // }\n  ShareLink() {\n    this.props.history.push('/share');\n  }\n\n  render() {\n    return (\n      <div className=\"getadditionchance\">\n        <h1>You can get additional chance by</h1>\n        <a \n        href=\"\" \n        className='btn btn--orange btn--radius' \n        >Get a chance for every 5000yen spent in rakutenichiba</a>\n        <br></br>\n        <br></br>\n        <a href=\"\" \n        className='btn btn--orange btn--radius'\n        >Use rakuten points to buy  chance </a>\n        <br></br>\n        <br></br>\n        <a href=\"\" \n        className='btn btn--orange btn--radius'\n        onClick = {this.ShareLink}\n        >share with one friend to get a free GACHA</a>\n        <br></br>\n        <br></br>\n        <br></br>\n      </div>\n    );\n  }\n}","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/LackofChance.js",[],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/Coupon.js",["73","74","75"],"import React, { useState, useEffect } from 'react';\nimport '../styles/Coupon.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CouponLogo from '../resources/paella.jpg';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Coupon() {\n  const classes = useStyles();\n  const [couponValue, setCouponValue] = React.useState('init couponValue');\n  const [expireData, setExpireData] = React.useState('');\n  const [CouponImg, setImg] = React.useState(CouponLogo);\n\n  useEffect(() => {\n    const currentReward = JSON.parse(sessionStorage.getItem('reward'));\n    console.log('coupon.js currentReward: ', currentReward);\n    if (currentReward === null) {\n      setCouponValue(`Sorry you get nothing`);\n      setExpireData('Try it again');\n      // check if currentReward is a coupon\n    } else if ('value' in currentReward) {\n      setCouponValue(`Your Coupon is : ${currentReward.value}`);\n      setExpireData(currentReward.expire_date);\n    } else {\n      setCouponValue(`You got an item: ${currentReward.Item.itemName}`);\n      setImg(currentReward.Item.mediumImageUrls[0].imageUrl);\n    }\n  }, [couponValue]);\n\n  return (\n    <div className=\"CouponContainer\">\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              R\n            </Avatar>\n          }\n          action={\n            <IconButton aria-label=\"settings\">\n              <MoreVertIcon />\n            </IconButton>\n          }\n          title={couponValue}\n          subheader={expireData}\n        />\n        <CardMedia\n          className={classes.media}\n          image={CouponImg}\n          title={'Paella dish'}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Coupon Description. {CouponImg}\n          </Typography>\n        </CardContent>\n        <CardActions disableSpacing>\n          <IconButton aria-label=\"add to favorites\">\n            <FavoriteIcon />\n          </IconButton>\n          <IconButton aria-label=\"share\">\n            <ShareIcon />\n          </IconButton>\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/RegisterPage.js",["76"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport '../styles/Login.css';\nimport { Redirect } from 'react-router-dom';\n\nexport default class RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props.match.params.friend_uuid);\n    console.log(this.props.friend_uuid);\n    this.state = {\n      UserName: '',\n      Password: '',\n      ConfirmPassword: '',\n    };\n    this.Register = this.Register.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  async Register(event) {\n    event.preventDefault();\n    console.log('Login function');\n    try {\n      const configForaAuthentication = {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      };\n      if (this.props.match.params.friend_uuid === undefined) {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n        };\n      } else {\n        var body = {\n          username: this.state.UserName,\n          password: this.state.Password,\n          confirm_password: this.state.ConfirmPassword,\n          friend_uuid: this.props.match.params.friend_uuid,\n        };\n      }\n      const response = await axios.post(\n        `http://127.0.0.1:8000/accounts/register/`,\n        body,\n        configForaAuthentication\n      );\n      console.log(response);\n      const token = response.data.token;\n      const configForCoupons = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Token ${token}`,\n        },\n      };\n      console.log(configForCoupons);\n\n      const coupon_response = await axios.get(\n        `http://127.0.0.1:8000/coupons/`,\n        configForCoupons\n      );\n      sessionStorage.setItem('coupons', JSON.stringify(coupon_response.data));\n\n      // sessionStorage.setItem('isLogin', true);\n      this.setState({ isLoggin: true });\n      sessionStorage.setItem('userName', this.state.UserName);\n      window.sessionStorage.setItem('data', JSON.stringify(response.data));\n      // var meta1 = JSON.parse(window.localStorage.getItem(\"meta\")); // -> retrive the data from local storage\n\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  handleChange(event) {\n    console.log('change');\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    if (this.state.isLoggin) {\n      return <Redirect to=\"/gacha\" />;\n    }\n\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.Register}>\n          <input\n            type=\"text\"\n            value={this.state.UserName}\n            name=\"UserName\"\n            placeholder=\"UserName\"\n            onChange={this.handleChange}\n          />\n          <br />\n\n          <input\n            type=\"password\"\n            value={this.state.Password}\n            name=\"Password\"\n            placeholder=\"Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <input\n            type=\"password\"\n            value={this.state.ConfirmPassword}\n            name=\"ConfirmPassword\"\n            placeholder=\"Confirm Password\"\n            onChange={this.handleChange}\n          />\n          <br />\n          <button>Submit</button>\n        </form>\n      </div>\n    );\n  }\n}\n","/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/LogoutButton.js",[],["77","78"],"/home/kikman/JavaScript/Gacha/gacha/gacha/src/components/ShareLink.js",["79","80"],"import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport rakutenLogo from '../resources/Rakuten-logo.png';\nimport '../styles/Sharelink.css';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n  },\n}))(MuiDialogContent);\n\nexport default function ShareLink() {\n  const [open, setOpen] = React.useState(false);\n  const [copied, setCopied] = React.useState(false);\n  const user_uuid = JSON.parse(window.sessionStorage.getItem('data'))[\n    'user_uuid'\n  ];\n  console.log(user_uuid);\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpen(true)}>\n        Get extra gacha chance\n      </Button>\n      <Dialog\n        onClose={() => setOpen(false)}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClose={() => setOpen(false)}\n        >\n          <img src={rakutenLogo} width={100} />\n        </DialogTitle>\n        <DialogContent dividers>\n          <p className=\"sharing-message\">Share with your frineds!</p>\n          <p>http://localhost:3000/register/{user_uuid}</p>\n          <CopyToClipboard\n            text={`http://localhost:3000/register/${user_uuid}`}\n            onCopy={() => setCopied(true)}\n          >\n            <Button variant=\"outlined\">Copy</Button>\n          </CopyToClipboard>\n          {copied ? <span className=\"copied-message\">Copied.</span> : null}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n\n// export default ShareLink;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":28,"column":9,"nodeType":"87","endLine":31,"endColumn":10},{"ruleId":"85","severity":1,"message":"86","line":34,"column":9,"nodeType":"87","endLine":36,"endColumn":10},{"ruleId":"85","severity":1,"message":"86","line":39,"column":9,"nodeType":"87","endLine":42,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":25},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":12},{"ruleId":"88","severity":1,"message":"93","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":16},{"ruleId":"94","severity":1,"message":"95","line":36,"column":13,"nodeType":"90","messageId":"96","endLine":36,"endColumn":17},{"ruleId":"81","replacedBy":"97"},{"ruleId":"83","replacedBy":"98"},{"ruleId":"88","severity":1,"message":"99","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":24},{"ruleId":"100","severity":1,"message":"101","line":75,"column":11,"nodeType":"87","endLine":75,"endColumn":48},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'clsx' is defined but never used.","'Collapse' is defined but never used.","no-redeclare","'body' is already defined.","redeclared",["102"],["103"],"'MuiDialogActions' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]